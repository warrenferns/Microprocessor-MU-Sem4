EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
LCM.exe -- emu8086 assembler version: 4.08  
 
[ 16-05-2021  --  10:11:11 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       DATA SEGMENT
[   2]    0000: 05 00 04 00                           NUM DW 05,04
[   3]    0004: 00 00 00 00                           LCM DW 2 DUP(0)
[   4]        :                                       DATA ENDS
[   5]        :                                       CODE SEGMENT
[   6]        :                                       ASSUME CS:CODE,DS:DATA
[   7]    0010: B8 00 00                              START: MOV AX,DATA
[   8]    0013: 8E D8                                 MOV DS,AX
[   9]    0015: BA 00 00                              MOV DX,0H
[  10]    0018: A1 00 00                              MOV AX,NUM
[  11]    001B: 8B 1E 02 00                           MOV BX,NUM+2
[  12]    001F: 50                                    UP: PUSH AX
[  13]    0020: 52                                    PUSH DX
[  14]    0021: F7 F3                                 DIV BX
[  15]    0023: 83 FA 00                              CMP DX,0
[  16]    0026: 74 0B                                 JE EXIT
[  17]    0028: 5A                                    POP DX
[  18]    0029: 58                                    POP AX
[  19]    002A: 03 06 00 00                           ADD AX,NUM
[  20]    002E: 73 01                                 JNC DOWN
[  21]    0030: 42                                    INC DX
[  22]    0031: EB EC                                 DOWN: JMP UP
[  23]    0033: 8F 06 06 00                           EXIT: POP LCM+2
[  24]    0037: 8F 06 04 00                           POP LCM
[  25]    003B: B4 4C                                 MOV AH,4CH
[  26]    003D: CD 21                                 INT 21H
[  27]        :                                       CODE ENDS
[  28]        :                                       END START
[  29]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 3F      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: AD      -   check sum (l.byte)
0013: 00      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 01      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 01      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
