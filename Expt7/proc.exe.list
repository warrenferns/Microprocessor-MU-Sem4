EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
proc.exe -- emu8086 assembler version: 4.08  
 
[ 14-05-2021  --  23:04:55 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .8086
[   2]        :                                       .model small
[   3]        :                                       .stack 100
[   4]        :                                       .data
[   5]    0070: 02                                    l db 02h
[   6]    0071: 03                                    b db 03h
[   7]    0072: 00 00                                 as dw ?
[   8]    0074: 00 00                                 ar dw ?
[   9]        :                                       .code
[  10]    0080:                                       arect proc near
[  11]    0080: A0 00 00                              mov al,l
[  12]    0083: 8A 1E 01 00                           mov bl,b
[  13]    0087: F6 E3                                 mul bl
[  14]    0089: C3                                    ret
[  15]        :                                       arect endp
[  16]    008A:                                       asq proc near
[  17]    008A: A0 00 00                              mov al,l
[  18]    008D: 8A 1E 01 00                           mov bl,b
[  19]    0091: F6 E3                                 mul bl
[  20]    0093: C3                                    ret
[  21]        :                                       asq endp
[  22]    0094:                                       start:
[  23]    0094: B8 07 00                              mov ax,@data
[  24]    0097: 8E D8                                 mov ds,ax
[  25]    0099: A0 00 00                              mov al,l
[  26]    009C: E8 E1 FF                              call arect
[  27]    009F: A3 04 00                              mov ar,ax
[  28]    00A2: A0 00 00                              mov al,l
[  29]    00A5: E8 E2 FF                              call asq
[  30]    00A8: A3 02 00                              mov as,ax
[  31]    00AB: CC                                    int 03h
[  32]    00AC: B4 4C                                 mov ah,4ch
[  33]    00AE: CD 21                                 int 21h
[  34]        :                                       end start
[  35]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: B0      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 64      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 57      -   check sum (l.byte)
0013: BB      -   check sum (h.byte)
0014: 14      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 08      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 15      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 08      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
